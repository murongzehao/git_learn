C51 COMPILER V9.60.7.0   MAIN                                                              08/09/2024 17:57:53 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "config.h"
   2          #include "GPIO.H"
   3          #include "UART.h"
   4          #include "Delay.h"
   5          #include "Timer.h"
   6          #include "switch.h"
   7          #include "NVIC.h"
   8          #include "STC8H_PWM.H"
   9          
  10          PWMx_Duty dutyB;
  11          
  12          #define MOTOR P01
  13          
  14          #define FREQ      1000
  15          
  16          #define PERIOD ((MAIN_Fosc / FREQ) - 1) // 周期
  17          
  18          
  19          /******************* IO配置函数 *******************/
  20          void  GPIO_config(void)
  21          {
  22   1          GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  23   1      
  24   1      
  25   1          GPIO_InitStructure.Pin  = GPIO_Pin_1;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
  26   1          GPIO_InitStructure.Mode = GPIO_PullUp;      //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,
             -GPIO_OUT_PP
  27   1          GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);  //初始化
  28   1      
  29   1          P3_MODE_IO_PU(GPIO_Pin_0 | GPIO_Pin_1);
  30   1      }
  31          
  32          /***************  串口初始化函数 *****************/
  33          void  UART_config(void)
  34          {
  35   1          COMx_InitDefine   COMx_InitStructure;         //结构定义
  36   1      
  37   1          COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
  38   1          COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  39   1          COMx_InitStructure.UART_BaudRate  = 115200ul;       //波特率, 一般 110 ~ 115200
  40   1          COMx_InitStructure.UART_RxEnable  = ENABLE;         //接收允许,   ENABLE或DISABLE
  41   1          COMx_InitStructure.BaudRateDouble = DISABLE;        //波特率加倍, ENABLE或DISABLE
  42   1          UART_Configuration(UART1, &COMx_InitStructure);     //初始化串口1 UART1,UART2,UART3,UART4
  43   1      
  44   1          NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,
             -Priority_2,Priority_3
  45   1      
  46   1          UART1_SW(UART1_SW_P30_P31);   //UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_P43_P44
  47   1      }
  48          void  PWM_config(void)
  49          {
  50   1          PWMx_InitDefine   PWMx_InitStructure;
C51 COMPILER V9.60.7.0   MAIN                                                              08/09/2024 17:57:53 PAGE 2   

  51   1      
  52   1          // 配置PWM
  53   1          PWMx_InitStructure.PWM_Mode       = CCMRn_PWM_MODE1;  //模式,   CCMRn_FREEZE,CCMRn_MATCH_VALID,CCMRn_MATC
             -H_INVALID,CCMRn_ROLLOVER,CCMRn_FORCE_INVALID,CCMRn_FORCE_VALID,CCMRn_PWM_MODE1,CCMRn_PWM_MODE2
  54   1          PWMx_InitStructure.PWM_Duty       = 0;  //PWM占空比时间, 0~Period
  55   1          PWMx_InitStructure.PWM_EnoSelect  = ENO6P;  //输出通道选择, ENO1P,ENO1N,ENO2P,ENO2N,ENO3P,ENO3N,ENO4P,E
             -NO4N / ENO5P,ENO6P,ENO7P,ENO8P
  56   1          PWM_Configuration(PWM6, &PWMx_InitStructure);
  57   1      
  58   1          // 配置PWMB
  59   1          PWMx_InitStructure.PWM_Period   = PERIOD - 1;       //周期时间,   0~65535
  60   1          PWMx_InitStructure.PWM_DeadTime = 0;          //死区发生器设置, 0~255
  61   1          PWMx_InitStructure.PWM_MainOutEnable= ENABLE;     //主输出使能, ENABLE,DISABLE
  62   1          PWMx_InitStructure.PWM_CEN_Enable   = ENABLE;     //使能计数器, ENABLE,DISABLE
  63   1          PWM_Configuration(PWMB, &PWMx_InitStructure);     //初始化PWM通用寄存器,  PWMA,PWMB
  64   1      
  65   1          // 切换PWM通道
  66   1          PWM6_SW(PWM6_SW_P01);     //PWM4_SW_P16_P17,PWM4_SW_P26_P27,PWM4_SW_P66_P67,PWM4_SW_P34_P33
  67   1      
  68   1          // 初始化PWMA的中断
  69   1          NVIC_PWM_Init(PWMB,DISABLE,Priority_0);
  70   1      }
  71          
  72          void main() {
  73   1      
  74   1          u8 duty_percent = 0; // 0 - 100
  75   1          EAXSFR();
  76   1          GPIO_config();
  77   1          UART_config();
  78   1          PWM_config();
  79   1      
  80   1          EA = 1;
  81   1      
  82   1      
  83   1      
  84   1      
  85   1          while(1) {
  86   2              dutyB.PWM6_Duty = PERIOD;
  87   2              UpdatePwm(PWM6, &dutyB);
  88   2              delay_ms(250);
  89   2              delay_ms(250);
  90   2              delay_ms(250);
  91   2              delay_ms(250);
  92   2              delay_ms(250);
  93   2              delay_ms(250);
  94   2              delay_ms(250);
  95   2              delay_ms(250);
  96   2              dutyB.PWM6_Duty = PERIOD * 0.3;
  97   2              UpdatePwm(PWM6, &dutyB);
  98   2              delay_ms(250);
  99   2              delay_ms(250);
 100   2              delay_ms(250);
 101   2              delay_ms(250);
 102   2              delay_ms(250);
 103   2              delay_ms(250);
 104   2              delay_ms(250);
 105   2              delay_ms(250);
 106   2              dutyB.PWM6_Duty = 0;
 107   2              UpdatePwm(PWM6, &dutyB);
 108   2               delay_ms(250);
 109   2              delay_ms(250);
 110   2              delay_ms(250);
C51 COMPILER V9.60.7.0   MAIN                                                              08/09/2024 17:57:53 PAGE 3   

 111   2              delay_ms(250);
 112   2              delay_ms(250);
 113   2              delay_ms(250);
 114   2              delay_ms(250);
 115   2              delay_ms(250);
 116   2      
 117   2      
 118   2      
 119   2      
 120   2      
 121   2          }
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
