C51 COMPILER V9.60.7.0   MAIN                                                              08/09/2024 18:20:27 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "config.h"
   2          #include "Delay.h"
   3          #include "GPIO.h"
   4          #include "UART.h"
   5          #include "NVIC.h"
   6          #include "switch.h"
   7          
   8          
   9          #define KEY1 P51
  10          #define KEY2 P52
  11          
  12          #define a  P00
  13          #define MOTOR  P01
  14          
  15          /******************* IO配置函数 *******************/
  16          void  GPIO_config(void)
  17          {
  18   1          GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  19   1      
  20   1          GPIO_InitStructure.Pin  = GPIO_Pin_0 | GPIO_Pin_1;    //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
  21   1          GPIO_InitStructure.Mode = GPIO_PullUp;      //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,
             -GPIO_OUT_PP
  22   1          GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);  //初始化
  23   1      
  24   1          GPIO_InitStructure.Pin  = GPIO_Pin_2 | GPIO_Pin_1;    //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
  25   1          GPIO_InitStructure.Mode = GPIO_PullUp;      //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,
             -GPIO_OUT_PP
  26   1          GPIO_Inilize(GPIO_P5,&GPIO_InitStructure);  //初始化
  27   1      }
  28          
  29          /***************  串口初始化函数 *****************/
  30          void  UART_config(void)
  31          {
  32   1          COMx_InitDefine   COMx_InitStructure;         //结构定义
  33   1      
  34   1          COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
  35   1          COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  36   1          COMx_InitStructure.UART_BaudRate  = 115200ul;       //波特率, 一般 110 ~ 115200
  37   1          COMx_InitStructure.UART_RxEnable  = ENABLE;         //接收允许,   ENABLE或DISABLE
  38   1          COMx_InitStructure.BaudRateDouble = DISABLE;        //波特率加倍, ENABLE或DISABLE
  39   1          UART_Configuration(UART1, &COMx_InitStructure);     //初始化串口1 UART1,UART2,UART3,UART4
  40   1      
  41   1          NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,
             -Priority_2,Priority_3
  42   1      
  43   1          UART1_SW(UART1_SW_P30_P31);   //UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_P43_P44
  44   1      }
  45          
  46          
  47          void main() {
  48   1          EAXSFR();
  49   1          GPIO_config();
C51 COMPILER V9.60.7.0   MAIN                                                              08/09/2024 18:20:27 PAGE 2   

  50   1          UART_config();
  51   1      
  52   1      
  53   1      
  54   1      EA = 1;
  55   1      
  56   1      
  57   1          while(1) {
  58   2              if(KEY1 == 1) {
  59   3                  MOTOR = 0;
  60   3      //            delay_ms(250);
  61   3      //            delay_ms(250);
  62   3      //            delay_ms(250);
  63   3      //            delay_ms(250);
  64   3                  printf("KEY1 Up\n");
  65   3      
  66   3              }
  67   2              else if(KEY1 == 0) {
  68   3                  MOTOR = 1;
  69   3      //            delay_ms(250);
  70   3      //            delay_ms(250);
  71   3      //            delay_ms(250);
  72   3      //            delay_ms(250);
  73   3                  printf("KEY1 Dowm\n");
  74   3      
  75   3              }
  76   2      
  77   2      
  78   2      
  79   2          }
  80   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    119    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
