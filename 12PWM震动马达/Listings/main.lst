C51 COMPILER V9.60.7.0   MAIN                                                              08/06/2024 21:26:43 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "Config.h"
   2          #include "GPIO.h"
   3          #include "Delay.h"
   4          #include "UART.h"
   5          #include "NVIC.h"
   6          #include "Switch.h"
   7          #include  "STC8H_PWM.h"
   8          
   9          /******************* IO配置函数 *******************/
  10          void  GPIO_config(void)
  11          {
  12   1          GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  13   1      
  14   1          GPIO_InitStructure.Pin  = GPIO_Pin_1;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
  15   1          GPIO_InitStructure.Mode = GPIO_OUT_PP;      //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,
             -GPIO_OUT_PP
  16   1          GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);  //初始化
  17   1      }
  18          /***************  串口初始化函数 *****************/
  19          void  UART_config(void)
  20          {
  21   1          COMx_InitDefine   COMx_InitStructure;         //结构定义
  22   1      
  23   1          COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
  24   1          COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  25   1          COMx_InitStructure.UART_BaudRate  = 115200ul;       //波特率, 一般 110 ~ 115200
  26   1          COMx_InitStructure.UART_RxEnable  = ENABLE;         //接收允许,   ENABLE或DISABLE
  27   1          COMx_InitStructure.BaudRateDouble = DISABLE;        //波特率加倍, ENABLE或DISABLE
  28   1          UART_Configuration(UART1, &COMx_InitStructure);     //初始化串口1 UART1,UART2,UART3,UART4
  29   1      
  30   1          NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,
             -Priority_2,Priority_3
  31   1      
  32   1          UART1_SW(UART1_SW_P30_P31);   //UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_P43_P44
  33   1      }
  34          
  35          
  36          /********************本地变量声明****************/
  37          PWMx_Duty dutyB;
  38          
  39          //频率
  40          #define FREQ  1000
  41          //1个周期的计数值   24000 000 / 1000 = 24 000
  42          #define PERIOD  (MAIN_Fosc / FREQ)
  43          
  44          void  PWM_config(void)
  45          {
  46   1          PWMx_InitDefine   PWMx_InitStructure;
  47   1      
  48   1          // 配置PWM
  49   1          PWMx_InitStructure.PWM_Mode       = CCMRn_PWM_MODE1;  //模式,   CCMRn_FREEZE,CCMRn_MATCH_VALID,CCMRn_MATC
             -H_INVALID,CCMRn_ROLLOVER,CCMRn_FORCE_INVALID,CCMRn_FORCE_VALID,CCMRn_PWM_MODE1,CCMRn_PWM_MODE2
C51 COMPILER V9.60.7.0   MAIN                                                              08/06/2024 21:26:43 PAGE 2   

  50   1          PWMx_InitStructure.PWM_Duty       = 0;  //PWM占空比时间, 0~Period
  51   1          PWMx_InitStructure.PWM_EnoSelect  = ENO6P;  //输出通道选择, ENO1P,ENO1N,ENO2P,ENO2N,ENO3P,ENO3N,ENO4P,E
             -NO4N / ENO5P,ENO6P,ENO7P,ENO8P
  52   1          PWM_Configuration(PWM6, &PWMx_InitStructure);
  53   1      
  54   1          // 配置PWMB
  55   1          PWMx_InitStructure.PWM_Period   = PERIOD - 1;       //周期时间,   0~65535
  56   1          PWMx_InitStructure.PWM_DeadTime = 0;          //死区发生器设置, 0~255
  57   1          PWMx_InitStructure.PWM_MainOutEnable= ENABLE;     //主输出使能, ENABLE,DISABLE
  58   1          PWMx_InitStructure.PWM_CEN_Enable   = ENABLE;     //使能计数器, ENABLE,DISABLE
  59   1          PWM_Configuration(PWMB, &PWMx_InitStructure);     //初始化PWM通用寄存器,  PWMA,PWMB
  60   1      
  61   1          // 切换PWM通道
  62   1          PWM6_SW(PWM6_SW_P01);     //PWM4_SW_P16_P17,PWM4_SW_P26_P27,PWM4_SW_P66_P67,PWM4_SW_P34_P33
  63   1      
  64   1          // 初始化PWMA的中断
  65   1          NVIC_PWM_Init(PWMB,DISABLE,Priority_0);
  66   1      }
  67          
  68          
  69          
  70          void main() {
  71   1        u8 duty_percent = 0;
  72   1        char dir = 1;
  73   1          EAXSFR();
  74   1      
  75   1          GPIO_config();
  76   1          UART_config();
  77   1          PWM_config();
  78   1        
  79   1          EA = 1;
  80   1      
  81   1          while(1){
  82   2            duty_percent += dir;
  83   2            if(duty_percent >= 100 ){
  84   3              dir = -1;
  85   3            }else if(duty_percent <= 0){
  86   3              dir = 1;
  87   3            }
  88   2            
  89   2            dutyB.PWM6_Duty = PERIOD * duty_percent / 100;
  90   2            UpdatePwm(PWM6,&dutyB);
  91   2            
  92   2          delay_ms(10);
  93   2          }
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    217    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
