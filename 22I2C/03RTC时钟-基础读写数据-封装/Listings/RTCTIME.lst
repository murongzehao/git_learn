C51 COMPILER V9.60.7.0   RTCTIME                                                           08/10/2024 21:07:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE RTCTIME
OBJECT MODULE PLACED IN .\Objects\RTCTIME.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE RTCTIME.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\R
                    -TCTIME.lst) TABS(2) OBJECT(.\Objects\RTCTIME.obj)

line level    source

   1          #include "RTCTIME.h"
   2          #include "GPIO.h"
   3          #include "NVIC.h"
   4          #include "I2C.h"
   5          #include "Switch.h"
   6          
   7          #define NUMBER 7
   8          
   9          /******************* IOÅäÖÃº¯Êý *******************/
  10          void  GPIO_config(void)
  11          {
  12   1          GPIO_InitTypeDef  GPIO_InitStructure;   //½á¹¹¶¨Òå
  13   1      
  14   1          GPIO_InitStructure.Pin  = GPIO_Pin_2 | GPIO_Pin_3;    //Ö¸¶¨Òª³õÊ¼»¯µÄIO, GPIO_Pin_0 ~ GPIO_Pin_7
  15   1          GPIO_InitStructure.Mode = GPIO_OUT_OD;      //Ö¸¶¨IOµÄÊäÈë»òÊä³ö·½Ê½,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,
             -GPIO_OUT_PP
  16   1          GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);  //³õÊ¼»¯
  17   1      }
  18          
  19          /****************  I2C³õÊ¼»¯º¯Êý *****************/
  20          void  I2C_config(void)
  21          {
  22   1          I2C_InitTypeDef   I2C_InitStructure;
  23   1      
  24   1          I2C_InitStructure.I2C_Mode      = I2C_Mode_Master;  //Ö÷´ÓÑ¡Ôñ   I2C_Mode_Master, I2C_Mode_Slave
  25   1          I2C_InitStructure.I2C_Enable    = ENABLE;     //I2C¹¦ÄÜÊ¹ÄÜ,   ENABLE, DISABLE
  26   1          I2C_InitStructure.I2C_MS_WDTA   = DISABLE;      //Ö÷»úÊ¹ÄÜ×Ô¶¯·¢ËÍ,  ENABLE, DISABLE
  27   1          I2C_InitStructure.I2C_Speed     = 13;       //×ÜÏßËÙ¶È=Fosc/2/(Speed*2+4),      0~63
  28   1          // 400k, 24M => 13
  29   1          I2C_Init(&I2C_InitStructure);
  30   1          NVIC_I2C_Init(I2C_Mode_Master,DISABLE,Priority_0);  //Ö÷´ÓÄ£Ê½, I2C_Mode_Master, I2C_Mode_Slave; ÖÐ¶ÏÊ¹
             -ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Priority_2,Priority_3
  31   1      
  32   1          I2C_SW(I2C_P33_P32);          //I2C_P14_P15,I2C_P24_P25,I2C_P33_P32
  33   1      }
  34          
  35          void RCT_TIME_init() {
  36   1          GPIO_config();
  37   1          I2C_config();
  38   1      
  39   1      }
  40          
  41          void RCT_TIME_set_clock(Clock_t c) {
  42   1          u8 p[NUMBER] = {0};
  43   1          u8 cent;
  44   1      
  45   1          p[0] = (c.second / 10) << 4 | (c.second % 10);
  46   1          p[1] = (c.minute / 10) << 4 | (c.minute % 10);
  47   1          p[2] = (c.hour / 10) << 4 | (c.hour % 10);
  48   1          p[3] = (c.day / 10) << 4 | (c.day % 10);
  49   1          p[4] = c.week;
  50   1          cent = (c.year >= 2100) ? 1 : 0;
  51   1          p[5] = cent << 7 | (c.month / 10) << 4 | (c.month % 10);
  52   1          p[6] = (c.year % 100 / 10) << 4 | (c.year % 10);
C51 COMPILER V9.60.7.0   RTCTIME                                                           08/10/2024 21:07:26 PAGE 2   

  53   1          RCT_TIME_Write(RCT_TIME_ADDR,RCT_TIME_REG, p, NUMBER);
  54   1      }
  55          
  56          // º¯ÊýÀïÃæµÄÔËËã³öÁËº¯Êý¾Í»á½áÊø½ø³Ì£¬Òªµ÷ÓÃº¯ÊýÀïÃæµÄÖµÐèÒªÓÃÖ¸Õë
  57          void RCT_TIME_get_clock(Clock_t * c) {
  58   1          u8 p[NUMBER] = {0};
  59   1          u8 cent;
  60   1          //½á¹¹Ìå
  61   1      //¶ÁÈ¡Êý¾Ý
  62   1          RCT_TIME_Read(RCT_TIME_ADDR,RCT_TIME_REG,p,NUMBER);
  63   1          //ÒòÎªÉè¶¨ÊÇBCD¸ñÊ½¼´4Î»¶þ½øÖÆÊýÎªÒ»Î»Ê®½øÖÆÊý£¬ËùÒÔ»ñÈ¡Ê®Î»µÄÊýÐèÒª°ÑÇ°4Î»µÄÊýÒÆµ½ºóËÄÎ»»ñÈ¡µ¥¸öÊýÔÙ 
             -*10 ×ª»»³ÉÊ®½øÖÆµÄÊ®Î»
  64   1          //second Èç p[0] =  VL 1 1 1   0 0 0 0  Òª»ñÈ¡Ê®Î»ÊýÖ»Ðè»ñÈ¡Ç°3Î»  &0x07(0 0 0 0   0 1 1 1)ÊÇÎªÁË°ÑVLÈ
             -¥µô »òÊÇÇ°Ãæ²»ÓÃµÄÎ»Êý¾Í²»ÐèÒª»»Ëã
  65   1          c -> second = ((p[0] >> 4) & 0x07) * 10 + (p[0] & 0x0f);
  66   1          c -> minute = ((p[1] >> 4) & 0x07) * 10 + (p[1] & 0x0f);
  67   1          c -> hour   = ((p[2] >> 4) & 0x03) * 10 + (p[2] & 0x0f);
  68   1          c -> day    = ((p[3] >> 4) & 0x03) * 10 + (p[3] & 0x0f);
  69   1          c -> week   =   p[4] & 0x07;
  70   1          c -> month  = ((p[5] >> 4) & 0x01) * 10 + (p[5] & 0x0f);
  71   1          cent   =   p[5] >> 7;
  72   1          c -> year   = ((p[6] >> 4) & 0x0f) * 10 + (p[6] & 0x0f);
  73   1          //Äê»¹Òª¼ÓÉÏÊÀ¼Í×é³ÉËÄÎ»Êý
  74   1          c -> year   +=  ((cent == 0) ? 2000 : 2100);
  75   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    506    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      34
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
