C51 COMPILER V9.60.7.0   NTC                                                               08/09/2024 17:05:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE NTC
OBJECT MODULE PLACED IN .\Objects\NTC.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE NTC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\NTC.l
                    -st) TABS(2) OBJECT(.\Objects\NTC.obj)

line level    source

   1          #include "NTC.H"
   2          #include "GPIO.h"
   3          #include "ADC.h"
   4          #include  "NVIC.h"
   5          
   6          /**********************
   7          通过热敏电阻读取环境温度
   8          
   9          1、通过ADC读取热敏电阻的电压值
  10            -读取得到ADC数字
  11            -计算得到电压值
  12          
  13          2、通过欧姆定律计算得到热敏电阻阻值
  14          
  15          3、根据阻值表得到温度值
  16          
  17          *****************************/
  18          
  19          
  20          
  21          
  22          /******************* IO配置函数 *******************/
  23          static void GPIO_config(void)
  24          {
  25   1          //P04
  26   1          GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  27   1      
  28   1          GPIO_InitStructure.Pin  = NTC_GPIO_PIN;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
  29   1          GPIO_InitStructure.Mode = GPIO_HighZ;     //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,G
             -PIO_OUT_PP
  30   1          GPIO_Inilize(NTC_GPIO,&GPIO_InitStructure); //初始化
  31   1      }
  32          
  33          
  34          
  35          /******************* AD配置函数 *******************/
  36          void  ADC_config(void)
  37          {
  38   1          ADC_InitTypeDef   ADC_InitStructure;    //结构定义
  39   1      
  40   1          ADC_InitStructure.ADC_SMPduty   = 31;   //ADC 模拟信号采样时间控制, 0~31（注意： SMPDUTY 一定不能设置小
             -于 10）
  41   1          ADC_InitStructure.ADC_CsSetup   = 0;    //ADC 通道选择时间控制 0(默认),1
  42   1          ADC_InitStructure.ADC_CsHold    = 1;    //ADC 通道选择保持时间控制 0,1(默认),2,3
  43   1          ADC_InitStructure.ADC_Speed     = ADC_SPEED_2X16T;    //设置 ADC 工作时钟频率 ADC_SPEED_2X1T~ADC_SPEED_2
             -X16T
  44   1          ADC_InitStructure.ADC_AdjResult = ADC_RIGHT_JUSTIFIED;  //ADC结果调整,  ADC_LEFT_JUSTIFIED,ADC_RIGHT_JUS
             -TIFIED
  45   1          ADC_Inilize(&ADC_InitStructure);    //初始化
  46   1          ADC_PowerControl(ENABLE);       //ADC电源开关, ENABLE或DISABLE
  47   1          NVIC_ADC_Init(DISABLE,Priority_0);    //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,P
             -riority_2,Priority_3
  48   1      }
  49          
C51 COMPILER V9.60.7.0   NTC                                                               08/09/2024 17:05:37 PAGE 2   

  50          //初始化
  51          
  52          void NTC_init(void) {
  53   1      
  54   1          ADC_config();
  55   1          GPIO_config();
  56   1      }
  57          
  58          u16 code temp_table[]= {
  59              58354, // -55
  60              55464, // -54
  61              52698, // -53
  62              50048, // -52
  63              47515, // -51
  64              45097, // -50
  65              42789, // -49
  66              40589, // -48
  67              38492, // -47
  68              36496, // -46
  69              34597, // -45
  70              32791, // -44
  71              31075, // -43
  72              29444, // -42
  73              27896, // -41
  74              26427, // -40
  75              25034, // -39
  76              23713, // -38
  77              22460, // -37
  78              21273, // -36
  79              20148, // -35
  80              19083, // -34
  81              18075, // -33
  82              17120, // -32
  83              16216, // -31
  84              15361, // -30
  85              14551, // -29
  86              13785, // -28
  87              13061, // -27
  88              12376, // -26
  89              11728, // -25
  90              11114, // -24
  91              10535, // -23
  92              9986,  // -22
  93              9468,  // -21
  94              8977,  // -20
  95              8513,  // -19
  96              8075,  // -18
  97              7660,  // -17
  98              7267,  // -16
  99              6896,  // -15
 100              6545,  // -14
 101              6212,  // -13
 102              5898,  // -12
 103              5601,  // -11
 104              5319,  // -10
 105              5053,  // -9
 106              4801,  // -8
 107              4562,  // -7
 108              4336,  // -6
 109              4122,  // -5
 110              3920,  // -4
 111              3728,  // -3
C51 COMPILER V9.60.7.0   NTC                                                               08/09/2024 17:05:37 PAGE 3   

 112              3546,  // -2
 113              3374,  // -1
 114              3211,  // 0
 115              3057,  // 1
 116              2910,  // 2
 117              2771,  // 3
 118              2639,  // 4
 119              2515,  // 5
 120              2396,  // 6
 121              2284,  // 7
 122              2177,  // 8
 123              2076,  // 9
 124              1978,  // 10
 125              1889,  // 11
 126              1802,  // 12
 127              1720,  // 13
 128              1642,  // 14
 129              1568,  // 15
 130              1497,  // 16
 131              1430,  // 17
 132              1366,  // 18
 133              1306,  // 19
 134              1248,  // 20
 135              1193,  // 21
 136              1141,  // 22
 137              1092,  // 23
 138              1044,  // 24
 139              1000,  // 25
 140              957,   // 26
 141              916,   // 27
 142              877,   // 28
 143              840,   // 29
 144              805,   // 30
 145              771,   // 31
 146              739,   // 32
 147              709,   // 33
 148              679,   // 34
 149              652,   // 35
 150              625,   // 36
 151              600,   // 37
 152              576,   // 38
 153              552,   // 39
 154              530,   // 40
 155              509,   // 41
 156              489,   // 42
 157              470,   // 43
 158              452,   // 44
 159              434,   // 45
 160              417,   // 46
 161              401,   // 47
 162              386,   // 48
 163              371,   // 49
 164              358,   // 50
 165              344,   // 51
 166              331,   // 52
 167              318,   // 53
 168              306,   // 54
 169              295,   // 55
 170              284,   // 56
 171              274,   // 57
 172              264,   // 58
 173              254,   // 59
C51 COMPILER V9.60.7.0   NTC                                                               08/09/2024 17:05:37 PAGE 4   

 174              245,   // 60
 175              236,   // 61
 176              228,   // 62
 177              220,   // 63
 178              212,   // 64
 179              205,   // 65
 180              198,   // 66
 181              191,   // 67
 182              184,   // 68
 183              178,   // 69
 184              172,   // 70
 185              166,   // 71
 186              160,   // 72
 187              155,   // 73
 188              150,   // 74
 189              145,   // 75
 190              140,   // 76
 191              135,   // 77
 192              131,   // 78
 193              126,   // 79
 194              122,   // 80
 195              118,   // 81
 196              115,   // 82
 197              111,   // 83
 198              107,   // 84
 199              104,   // 85
 200              101,   // 86
 201              97,    // 87
 202              94,    // 88
 203              91,    // 89
 204              89,    // 90
 205              86,    // 91
 206              83,    // 92
 207              81,    // 93
 208              78,    // 94
 209              76,    // 95
 210              74,    // 96
 211              71,    // 97
 212              69,    // 98
 213              67,    // 99
 214              65,    // 100
 215              63,    // 101
 216              61,    // 102
 217              60,    // 103
 218              58,    // 104
 219              56,    // 105
 220              55,    // 106
 221              53,    // 107
 222              52,    // 108
 223              50,    // 109
 224              49,    // 110
 225              47,    // 111
 226              46,    // 112
 227              45,    // 113
 228              43,    // 114
 229              42,    // 115
 230              41,    // 116
 231              40,    // 117
 232              39,    // 118
 233              38,    // 119
 234              37,    // 120
 235              36,    // 121
C51 COMPILER V9.60.7.0   NTC                                                               08/09/2024 17:05:37 PAGE 5   

 236              35,    // 122
 237              34,    // 123
 238              33,    // 124
 239              32,    // 125
 240          };
 241          
 242          int search_temp(float rst_Rx100) {
 243   1      
 244   1          int i, min_index = 0; // 距离最近的电阻值的元素索引
 245   1      
 246   1          //设置一个最小距离用以记录
 247   1          float min_distance = abs(rst_Rx100 - temp_table[0]);//设置一个最小值
 248   1      
 249   1          //计算数组长度
 250   1          int len = sizeof(temp_table) / sizeof(temp_table[0]);
 251   1      
 252   1      
 253   1          for(i = 0; i < len; i++) {
 254   2      
 255   2              float distance = abs(rst_Rx100 - temp_table[i]);//计算的距离值
 256   2      
 257   2              //有距离更近的数值
 258   2              if(min_distance > distance) {
 259   3                  min_distance = distance;
 260   3                  min_index = i;
 261   3              }
 262   2      
 263   2      
 264   2          }
 265   1      
 266   1          return min_index;
 267   1      }
 268          
 269          int NTC_get_temperature(void) {
 270   1      
 271   1          u16 adc_value ;
 272   1          float rst_V,rst_R;
 273   1          int rst_T;
 274   1      //  1、通过ADC读取热敏电阻的电压值
 275   1          // - 读取12通道的ADC值
 276   1          adc_value =  Get_ADCResult(NTC_ADC_CH);
 277   1          // - 计算得到电压值 adc_value = 4096 * (rst_V / 2.5)
 278   1          rst_V = adc_value * 2.5 / 4096;//输入电压
 279   1      
 280   1      
 281   1      //2、通过欧姆定律计算得到热敏电阻阻值
 282   1          //R6
 283   1          rst_R = 10 * rst_V / (3.3 - rst_V);
 284   1      
 285   1      //3、根据阻值表得到温度值
 286   1          rst_T = search_temp(rst_R * 100) - 55;
 287   1        printf("温度： %d ℃\n", rst_T);
 288   1      
 289   1          return rst_T;
 290   1      
 291   1      
 292   1      }
 293          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    427    ----
C51 COMPILER V9.60.7.0   NTC                                                               08/09/2024 17:05:37 PAGE 6   

   CONSTANT SIZE    =    376    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
