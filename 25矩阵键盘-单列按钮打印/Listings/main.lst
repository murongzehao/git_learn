C51 COMPILER V9.60.7.0   MAIN                                                              08/15/2024 15:29:27 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "config.h"
   2          #include "GPIO.h"
   3          #include "UART.h"
   4          #include "NVIC.h"
   5          #include "Switch.h"
   6          #include "Delay.h"
   7          
   8          //列
   9          #define KCOL1  P03
  10          #define KCOL2  P06
  11          #define KCOL3  P07
  12          #define KCOL4  P17
  13          
  14          //行
  15          #define KROW1  P34
  16          #define KROW2  P35
  17          #define KROW3  P40
  18          #define KROW4  P41
  19          
  20          /******************* IO配置函数 *******************/
  21          void  GPIO_config(void)
  22          {
  23   1          P0_MODE_IO_PU(GPIO_Pin_3 | GPIO_Pin_6 | GPIO_Pin_7)
  24   1          P1_MODE_IO_PU(GPIO_Pin_7)
  25   1          P3_MODE_IO_PU(GPIO_Pin_4 | GPIO_Pin_5)
  26   1          P4_MODE_IO_PU(GPIO_Pin_0 | GPIO_Pin_1)
  27   1      }
  28          
  29          /***************  串口初始化函数 *****************/
  30          void  UART_config(void)
  31          {
  32   1          COMx_InitDefine   COMx_InitStructure;         //结构定义
  33   1      
  34   1          COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
  35   1          COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  36   1          COMx_InitStructure.UART_BaudRate  = 115200ul;       //波特率, 一般 110 ~ 115200
  37   1          COMx_InitStructure.UART_RxEnable  = ENABLE;         //接收允许,   ENABLE或DISABLE
  38   1          COMx_InitStructure.BaudRateDouble = DISABLE;        //波特率加倍, ENABLE或DISABLE
  39   1          UART_Configuration(UART1, &COMx_InitStructure);     //初始化串口1 UART1,UART2,UART3,UART4
  40   1      
  41   1          NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,
             -Priority_2,Priority_3
  42   1      
  43   1          UART1_SW(UART1_SW_P30_P31);   //UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_P43_P44
  44   1      }
  45          
  46          #define DOWM  0
  47          #define UP    1
  48          
  49          u8 last_key_dowm = UP;
  50          
  51          //单个按钮的使用
C51 COMPILER V9.60.7.0   MAIN                                                              08/15/2024 15:29:27 PAGE 2   

  52          /***************************************************
  53          void scan() {
  54              KROW1 = 0;
  55              KROW2 = 1;
  56              KROW3 = 1;
  57              KROW4 = 1;
  58          
  59          
  60              if(KCOL1 == DOWM && last_key_dowm == UP) {
  61                  last_key_dowm = DOWM;
  62                  printf("UP");
  63              } else if(KCOL1 == UP && last_key_dowm == DOWM) {
  64                  last_key_dowm = UP;
  65                  printf("DOWM");
  66              }
  67          
  68          }
  69          ******************************************************/
  70          
  71          
  72          void ROW_OUT(u8 row) {
  73   1          KROW1 = (row == 0) ? 0 : 1;
  74   1          KROW2 = (row == 1) ? 0 : 1;
  75   1          KROW3 = (row == 2) ? 0 : 1;
  76   1          KROW4 = (row == 3) ? 0 : 1;
  77   1      }
  78          
  79          //上一次按钮的状态
  80          u8 states[] = {
  81              1,1,1,1,    // 0, 1, 2, 3
  82              1,1,1,1,    // 4, 5, 6, 7,
  83              1,1,1,1,    // 8, 9,10,11,
  84              1,1,1,1,    //12,13,14,15,
  85          };
  86          
  87          
  88          
  89          void scan() {
  90   1          KROW1 = 0;
  91   1          KROW2 = 1;
  92   1          KROW3 = 1;
  93   1          KROW4 = 1;
  94   1      //    u8 row,col;
  95   1      
  96   1          if( KCOL1 == DOWM && states[0] == UP) {
  97   2              states[0] = DOWM;
  98   2              printf("1up");
  99   2      
 100   2          } else if( KCOL1 == UP && states[0] == DOWM) {
 101   2              states[0] = UP;
 102   2              printf("1dowm");
 103   2          }
 104   1          
 105   1          
 106   1          KROW1 = 1;
 107   1          KROW2 = 0;
 108   1          KROW3 = 1;
 109   1          KROW4 = 1;
 110   1          if( KCOL1 == DOWM && states[4] == UP) {
 111   2              states[4] = DOWM;
 112   2              printf("2up");
 113   2          } else if( KCOL1 == UP && states[4] == DOWM) {
C51 COMPILER V9.60.7.0   MAIN                                                              08/15/2024 15:29:27 PAGE 3   

 114   2              states[4] = UP;
 115   2              printf("2dowm");
 116   2          }
 117   1      
 118   1      
 119   1      
 120   1      }
 121          
 122          
 123          void main() {
 124   1      
 125   1          GPIO_config();
 126   1          UART_config();
 127   1      
 128   1          EA = 1;
 129   1      
 130   1          while(1) {
 131   2              scan();
 132   2      
 133   2      
 134   2          }
 135   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    213    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
